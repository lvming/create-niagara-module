apply plugin: "idea"
idea {
  module {
    testSourceDirs += file('srcTest')
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs = [
    "-Xlint:all",
    "-Xlint:-options",
    "-Xlint:-serial",
    "-Xlint:-overrides",
  ]
}

jar {
  from('src') {
    include 'WEB-INF/**'
    include 'META-INF/**'
  }
}

configurations {
  uberjarSources
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = "sources"
  baseName rootProject.name
  from sourceSets.main.allSource
  from {
    configurations.uberjarSources.collect { it.isDirectory() ? it : zipTree(it) }
  }

  doLast {
    def isAX = project.name.endsWith("-ax")
    copy {
      into { "${isAX ? niagaraAxHome : niagaraHome}/modules" }
      from archivePath
      rename archiveName, "${baseName}-sources.jar"
    }
  }
}

assemble.dependsOn "sourcesJar"

task signJar(dependsOn: "jar", group: "build") {
  def jarFile = "${niagaraHome}/modules/${jar.baseName}.jar"
  outputs.cacheIf { true }
  outputs.upToDateWhen {
    new File(jarFile).lastModified() - jar.archivePath.lastModified() > 1000
  }
  doLast {
    if (!project.name.endsWith("-ax")) {
      ant.signjar(
        jar: jarFile,
        keystore: N4_KEYSTORE,
        storetype: N4_STORETYPE,
        alias: N4_ALIAS,
        storepass: N4_STOREPASS,
        keypass: N4_KEYPASS,
        tsaurl: "http://timestamp.digicert.com",
        verbose: true,
        // preservelastmodified: true,
      )
    }
  }
}

assemble.dependsOn "signJar"
